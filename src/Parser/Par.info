-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Parser/Par.y
-----------------------------------------------------------------------------

state 35 contains 2 reduce/reduce conflicts.
state 110 contains 1 shift/reduce conflicts.

rule 9 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> Type Ident '=' Expr ';'                  (6)
	ListTopDef -> TopDef                               (7)
	ListTopDef -> TopDef ListTopDef                    (8)
	Arg -> Type Ident                                  (9)
	Arg -> Type Ident                                  (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	Block -> '{' ListStmt '}'                          (14)
	ListStmt ->                                        (15)
	ListStmt -> Stmt ListStmt                          (16)
	Stmt -> ';'                                        (17)
	Stmt -> Block                                      (18)
	Stmt -> Type ListItem ';'                          (19)
	Stmt -> TopDef                                     (20)
	Stmt -> Ident '=' Expr ';'                         (21)
	Stmt -> Ident '++' ';'                             (22)
	Stmt -> Ident '--' ';'                             (23)
	Stmt -> 'return' Expr ';'                          (24)
	Stmt -> 'return' ';'                               (25)
	Stmt -> 'if' '(' Expr ')' Stmt                     (26)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (27)
	Stmt -> 'while' '(' Expr ')' Stmt                  (28)
	Stmt -> Expr ';'                                   (29)
	Item -> Ident                                      (30)
	ListItem -> Item                                   (31)
	ListItem -> Item ',' ListItem                      (32)
	Type -> 'int'                                      (33)
	Type -> 'string'                                   (34)
	Type -> 'boolean'                                  (35)
	Type -> 'void'                                     (36)
	Expr6 -> Ident                                     (37)
	Expr6 -> Integer                                   (38)
	Expr6 -> 'true'                                    (39)
	Expr6 -> 'false'                                   (40)
	Expr6 -> Ident '(' ListExpr ')'                    (41)
	Expr6 -> String                                    (42)
	Expr6 -> '(' Expr ')'                              (43)
	Expr5 -> '-' Expr6                                 (44)
	Expr5 -> '!' Expr6                                 (45)
	Expr5 -> Expr6                                     (46)
	Expr4 -> Expr4 MulOp Expr5                         (47)
	Expr4 -> Expr5                                     (48)
	Expr3 -> Expr3 AddOp Expr4                         (49)
	Expr3 -> Expr4                                     (50)
	Expr2 -> Expr2 RelOp Expr3                         (51)
	Expr2 -> Expr3                                     (52)
	Expr1 -> Expr2 '&&' Expr1                          (53)
	Expr1 -> Expr2                                     (54)
	Expr -> Expr1 '||' Expr                            (55)
	Expr -> Expr1                                      (56)
	ListExpr ->                                        (57)
	ListExpr -> Expr                                   (58)
	ListExpr -> Expr ',' ListExpr                      (59)
	AddOp -> '+'                                       (60)
	AddOp -> '-'                                       (61)
	MulOp -> '*'                                       (62)
	MulOp -> '/'                                       (63)
	MulOp -> '%'                                       (64)
	RelOp -> '<'                                       (65)
	RelOp -> '<='                                      (66)
	RelOp -> '>'                                       (67)
	RelOp -> '>='                                      (68)
	RelOp -> '=='                                      (69)
	RelOp -> '!='                                      (70)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'boolean'      { PT _ (TS _ 21) }
	'else'         { PT _ (TS _ 22) }
	'false'        { PT _ (TS _ 23) }
	'if'           { PT _ (TS _ 24) }
	'int'          { PT _ (TS _ 25) }
	'return'       { PT _ (TS _ 26) }
	'string'       { PT _ (TS _ 27) }
	'true'         { PT _ (TS _ 28) }
	'void'         { PT _ (TS _ 29) }
	'while'        { PT _ (TS _ 30) }
	'{'            { PT _ (TS _ 31) }
	'||'           { PT _ (TS _ 32) }
	'}'            { PT _ (TS _ 33) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6
	ListTopDef      rules 7, 8
	Arg             rules 9, 10
	ListArg         rules 11, 12, 13
	Block           rule  14
	ListStmt        rules 15, 16
	Stmt            rules 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
	Item            rule  30
	ListItem        rules 31, 32
	Type            rules 33, 34, 35, 36
	Expr6           rules 37, 38, 39, 40, 41, 42, 43
	Expr5           rules 44, 45, 46
	Expr4           rules 47, 48
	Expr3           rules 49, 50
	Expr2           rules 51, 52
	Expr1           rules 53, 54
	Expr            rules 55, 56
	ListExpr        rules 57, 58, 59
	AddOp           rules 60, 61
	MulOp           rules 62, 63, 64
	RelOp           rules 65, 66, 67, 68, 69, 70

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 7)
	ListTopDef -> TopDef . ListTopDef                   (rule 8)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 7

	TopDef         goto state 4
	ListTopDef     goto state 12
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	TopDef -> Type . Ident '=' Expr ';'                 (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 11

State 7

	Type -> 'boolean' .                                 (rule 35)

	L_Ident        reduce using rule 35


State 8

	Type -> 'int' .                                     (rule 33)

	L_Ident        reduce using rule 33


State 9

	Type -> 'string' .                                  (rule 34)

	L_Ident        reduce using rule 34


State 10

	Type -> 'void' .                                    (rule 36)

	L_Ident        reduce using rule 36


State 11

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)
	TopDef -> Type Ident . '=' Expr ';'                 (rule 6)

	'('            shift, and enter state 13
	'='            shift, and enter state 14


State 12

	ListTopDef -> TopDef ListTopDef .                   (rule 8)

	%eof           reduce using rule 8


State 13

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 32
	ListArg        goto state 33
	Type           goto state 34

State 14

	TopDef -> Type Ident '=' . Expr ';'                 (rule 6)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 15

	Expr6 -> Ident .                                    (rule 37)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 41)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	'('            shift, and enter state 58
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37


State 16

	Expr6 -> Integer .                                  (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 17

	Expr6 -> String .                                   (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 18

	Expr5 -> Expr6 .                                    (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 19

	Expr4 -> Expr5 .                                    (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 20

	Expr4 -> Expr4 . MulOp Expr5                        (rule 47)
	Expr3 -> Expr4 .                                    (rule 50)

	'!='           reduce using rule 50
	'%'            shift, and enter state 55
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            shift, and enter state 56
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            shift, and enter state 57
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50

	MulOp          goto state 54

State 21

	Expr3 -> Expr3 . AddOp Expr4                        (rule 49)
	Expr2 -> Expr3 .                                    (rule 52)

	'!='           reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'+'            shift, and enter state 52
	','            reduce using rule 52
	'-'            shift, and enter state 53
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52

	AddOp          goto state 51

State 22

	Expr2 -> Expr2 . RelOp Expr3                        (rule 51)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 53)
	Expr1 -> Expr2 .                                    (rule 54)

	'!='           shift, and enter state 44
	'&&'           shift, and enter state 45
	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	'<'            shift, and enter state 46
	'<='           shift, and enter state 47
	'=='           shift, and enter state 48
	'>'            shift, and enter state 49
	'>='           shift, and enter state 50
	'||'           reduce using rule 54

	RelOp          goto state 43

State 23

	Expr -> Expr1 . '||' Expr                           (rule 55)
	Expr -> Expr1 .                                     (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'||'           shift, and enter state 42


State 24

	TopDef -> Type Ident '=' Expr . ';'                 (rule 6)

	';'            shift, and enter state 41


State 25

	Expr5 -> '!' . Expr6                                (rule 45)

	'('            shift, and enter state 26
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 40

State 26

	Expr6 -> '(' . Expr ')'                             (rule 43)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 39

State 27

	Expr5 -> '-' . Expr6                                (rule 44)

	'('            shift, and enter state 26
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 38

State 28

	Expr6 -> 'false' .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 29

	Expr6 -> 'true' .                                   (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 30

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 31

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 32

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 37


State 33

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 36


State 34

	Arg -> Type . Ident                                 (rule 9)
	Arg -> Type . Ident                                 (rule 10)

	L_Ident        shift, and enter state 2

	Ident          goto state 35

State 35

	Arg -> Type Ident .                                 (rule 9)
	Arg -> Type Ident .                                 (rule 10)

	')'            reduce using rule 10
			(reduce using rule 9)

	','            reduce using rule 10
			(reduce using rule 9)



State 36

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 69

	Block          goto state 68

State 37

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 32
	ListArg        goto state 67
	Type           goto state 34

State 38

	Expr5 -> '-' Expr6 .                                (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 39

	Expr6 -> '(' Expr . ')'                             (rule 43)

	')'            shift, and enter state 66


State 40

	Expr5 -> '!' Expr6 .                                (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 41

	TopDef -> Type Ident '=' Expr ';' .                 (rule 6)

	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'boolean'      reduce using rule 6
	'else'         reduce using rule 6
	'false'        reduce using rule 6
	'if'           reduce using rule 6
	'int'          reduce using rule 6
	'return'       reduce using rule 6
	'string'       reduce using rule 6
	'true'         reduce using rule 6
	'void'         reduce using rule 6
	'while'        reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	L_Ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6


State 42

	Expr -> Expr1 '||' . Expr                           (rule 55)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 65

State 43

	Expr2 -> Expr2 RelOp . Expr3                        (rule 51)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 64

State 44

	RelOp -> '!=' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 45

	Expr1 -> Expr2 '&&' . Expr1                         (rule 53)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 63

State 46

	RelOp -> '<' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 47

	RelOp -> '<=' .                                     (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 48

	RelOp -> '==' .                                     (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 49

	RelOp -> '>' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 50

	RelOp -> '>=' .                                     (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 51

	Expr3 -> Expr3 AddOp . Expr4                        (rule 49)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 62

State 52

	AddOp -> '+' .                                      (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'false'        reduce using rule 60
	'true'         reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 53

	AddOp -> '-' .                                      (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'false'        reduce using rule 61
	'true'         reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 54

	Expr4 -> Expr4 MulOp . Expr5                        (rule 47)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 61

State 55

	MulOp -> '%' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 56

	MulOp -> '*' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 57

	MulOp -> '/' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 58

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 41)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	')'            reduce using rule 57
	'-'            shift, and enter state 27
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 59
	ListExpr       goto state 60

State 59

	ListExpr -> Expr .                                  (rule 58)
	ListExpr -> Expr . ',' ListExpr                     (rule 59)

	')'            reduce using rule 58
	','            shift, and enter state 82


State 60

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 41)

	')'            shift, and enter state 81


State 61

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 62

	Expr4 -> Expr4 . MulOp Expr5                        (rule 47)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 49)

	'!='           reduce using rule 49
	'%'            shift, and enter state 55
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            shift, and enter state 56
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            shift, and enter state 57
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49

	MulOp          goto state 54

State 63

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53
	'||'           reduce using rule 53


State 64

	Expr3 -> Expr3 . AddOp Expr4                        (rule 49)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 51)

	'!='           reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'+'            shift, and enter state 52
	','            reduce using rule 51
	'-'            shift, and enter state 53
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51

	AddOp          goto state 51

State 65

	Expr -> Expr1 '||' Expr .                           (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55


State 66

	Expr6 -> '(' Expr ')' .                             (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 67

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 68

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'boolean'      reduce using rule 5
	'else'         reduce using rule 5
	'false'        reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'true'         reduce using rule 5
	'void'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 69

	Block -> '{' . ListStmt '}'                         (rule 14)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	';'            shift, and enter state 77
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 28
	'if'           shift, and enter state 78
	'int'          shift, and enter state 8
	'return'       shift, and enter state 79
	'string'       shift, and enter state 9
	'true'         shift, and enter state 29
	'void'         shift, and enter state 10
	'while'        shift, and enter state 80
	'{'            shift, and enter state 69
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 70
	Integer        goto state 16
	String         goto state 17
	TopDef         goto state 71
	Block          goto state 72
	ListStmt       goto state 73
	Stmt           goto state 74
	Type           goto state 75
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 76

State 70

	Stmt -> Ident . '=' Expr ';'                        (rule 21)
	Stmt -> Ident . '++' ';'                            (rule 22)
	Stmt -> Ident . '--' ';'                            (rule 23)
	Expr6 -> Ident .                                    (rule 37)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 41)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	'('            shift, and enter state 58
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	'++'           shift, and enter state 94
	'-'            reduce using rule 37
	'--'           shift, and enter state 95
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'='            shift, and enter state 96
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37


State 71

	Stmt -> TopDef .                                    (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 72

	Stmt -> Block .                                     (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 73

	Block -> '{' ListStmt . '}'                         (rule 14)

	'}'            shift, and enter state 93


State 74

	ListStmt -> Stmt . ListStmt                         (rule 16)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	';'            shift, and enter state 77
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 28
	'if'           shift, and enter state 78
	'int'          shift, and enter state 8
	'return'       shift, and enter state 79
	'string'       shift, and enter state 9
	'true'         shift, and enter state 29
	'void'         shift, and enter state 10
	'while'        shift, and enter state 80
	'{'            shift, and enter state 69
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 70
	Integer        goto state 16
	String         goto state 17
	TopDef         goto state 71
	Block          goto state 72
	ListStmt       goto state 92
	Stmt           goto state 74
	Type           goto state 75
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 76

State 75

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	TopDef -> Type . Ident '=' Expr ';'                 (rule 6)
	Stmt -> Type . ListItem ';'                         (rule 19)

	L_Ident        shift, and enter state 2

	Ident          goto state 89
	Item           goto state 90
	ListItem       goto state 91

State 76

	Stmt -> Expr . ';'                                  (rule 29)

	';'            shift, and enter state 88


State 77

	Stmt -> ';' .                                       (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 78

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 26)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 27)

	'('            shift, and enter state 87


State 79

	Stmt -> 'return' . Expr ';'                         (rule 24)
	Stmt -> 'return' . ';'                              (rule 25)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	';'            shift, and enter state 86
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 85

State 80

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 28)

	'('            shift, and enter state 84


State 81

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 82

	ListExpr -> Expr ',' . ListExpr                     (rule 59)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	')'            reduce using rule 57
	'-'            shift, and enter state 27
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 59
	ListExpr       goto state 83

State 83

	ListExpr -> Expr ',' ListExpr .                     (rule 59)

	')'            reduce using rule 59


State 84

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 28)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 104

State 85

	Stmt -> 'return' Expr . ';'                         (rule 24)

	';'            shift, and enter state 103


State 86

	Stmt -> 'return' ';' .                              (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 87

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 26)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 27)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 102

State 88

	Stmt -> Expr ';' .                                  (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 89

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)
	TopDef -> Type Ident . '=' Expr ';'                 (rule 6)
	Item -> Ident .                                     (rule 30)

	'('            shift, and enter state 13
	','            reduce using rule 30
	';'            reduce using rule 30
	'='            shift, and enter state 14


State 90

	ListItem -> Item .                                  (rule 31)
	ListItem -> Item . ',' ListItem                     (rule 32)

	','            shift, and enter state 101
	';'            reduce using rule 31


State 91

	Stmt -> Type ListItem . ';'                         (rule 19)

	';'            shift, and enter state 100


State 92

	ListStmt -> Stmt ListStmt .                         (rule 16)

	'}'            reduce using rule 16


State 93

	Block -> '{' ListStmt '}' .                         (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'boolean'      reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'return'       reduce using rule 14
	'string'       reduce using rule 14
	'true'         reduce using rule 14
	'void'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 94

	Stmt -> Ident '++' . ';'                            (rule 22)

	';'            shift, and enter state 99


State 95

	Stmt -> Ident '--' . ';'                            (rule 23)

	';'            shift, and enter state 98


State 96

	Stmt -> Ident '=' . Expr ';'                        (rule 21)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	'false'        shift, and enter state 28
	'true'         shift, and enter state 29
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 15
	Integer        goto state 16
	String         goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 97

State 97

	Stmt -> Ident '=' Expr . ';'                        (rule 21)

	';'            shift, and enter state 109


State 98

	Stmt -> Ident '--' ';' .                            (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 99

	Stmt -> Ident '++' ';' .                            (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 100

	Stmt -> Type ListItem ';' .                         (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 101

	ListItem -> Item ',' . ListItem                     (rule 32)

	L_Ident        shift, and enter state 2

	Ident          goto state 107
	Item           goto state 90
	ListItem       goto state 108

State 102

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 26)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 27)

	')'            shift, and enter state 106


State 103

	Stmt -> 'return' Expr ';' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 104

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 28)

	')'            shift, and enter state 105


State 105

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 28)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	';'            shift, and enter state 77
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 28
	'if'           shift, and enter state 78
	'int'          shift, and enter state 8
	'return'       shift, and enter state 79
	'string'       shift, and enter state 9
	'true'         shift, and enter state 29
	'void'         shift, and enter state 10
	'while'        shift, and enter state 80
	'{'            shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 70
	Integer        goto state 16
	String         goto state 17
	TopDef         goto state 71
	Block          goto state 72
	Stmt           goto state 111
	Type           goto state 75
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 76

State 106

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 26)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 27)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	';'            shift, and enter state 77
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 28
	'if'           shift, and enter state 78
	'int'          shift, and enter state 8
	'return'       shift, and enter state 79
	'string'       shift, and enter state 9
	'true'         shift, and enter state 29
	'void'         shift, and enter state 10
	'while'        shift, and enter state 80
	'{'            shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 70
	Integer        goto state 16
	String         goto state 17
	TopDef         goto state 71
	Block          goto state 72
	Stmt           goto state 110
	Type           goto state 75
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 76

State 107

	Item -> Ident .                                     (rule 30)

	','            reduce using rule 30
	';'            reduce using rule 30


State 108

	ListItem -> Item ',' ListItem .                     (rule 32)

	';'            reduce using rule 32


State 109

	Stmt -> Ident '=' Expr ';' .                        (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 110

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 26)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 27)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         shift, and enter state 112
			(reduce using rule 26)

	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 111

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 112

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 27)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'-'            shift, and enter state 27
	';'            shift, and enter state 77
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 28
	'if'           shift, and enter state 78
	'int'          shift, and enter state 8
	'return'       shift, and enter state 79
	'string'       shift, and enter state 9
	'true'         shift, and enter state 29
	'void'         shift, and enter state 10
	'while'        shift, and enter state 80
	'{'            shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 30
	L_quoted       shift, and enter state 31

	Ident          goto state 70
	Integer        goto state 16
	String         goto state 17
	TopDef         goto state 71
	Block          goto state 72
	Stmt           goto state 113
	Type           goto state 75
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 76

State 113

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 71
Number of terminals: 36
Number of non-terminals: 26
Number of states: 114
